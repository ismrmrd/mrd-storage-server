version: '3'

services:

  postgres:
    image: 'postgres:latest'
    ports:
      - 9920:5432
    environment:
      - POSTGRES_DB=mrd
      - POSTGRES_USER=mrd
      - POSTGRES_PASSWORD=mrd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mrd"]
      interval: 5s
      timeout: 5s
      retries: 5

  azurite:
    image: 'mcr.microsoft.com/azure-storage/azurite:latest'
    ports:
      - 10000:10000

  mrd-sqlite-azurite:
    profiles: ["remote"]
    build: .
    ports:
      - 3334:3333
    environment:
      - MRD_STORAGE_SERVER_DATABASE_PROVIDER=sqlite
      - MRD_STORAGE_SERVER_DATABASE_CONNECTION_STRING=/data/metadata.db
      - MRD_STORAGE_SERVER_STORAGE_PROVIDER=azureblob
      - MRD_STORAGE_SERVER_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1
    volumes:
      - /data
    depends_on:
      azurite:
        condition: service_started

  mrd-postgres-filesystem:
    profiles: ["remote"]
    build: .
    ports:
      - 3335:3333
    environment:
      - MRD_STORAGE_SERVER_DATABASE_PROVIDER=postgresql
      - MRD_STORAGE_SERVER_DATABASE_CONNECTION_STRING=user=mrd dbname=mrd host=postgres port=5432 sslmode=disable
      - MRD_STORAGE_SERVER_DATABASE_PASSWORD=mrd
      - MRD_STORAGE_SERVER_STORAGE_PROVIDER=filesystem
      - MRD_STORAGE_SERVER_STORAGE_CONNECTION_STRING=/data/blobs
    volumes:
      - /data
    depends_on:
      postgres:
        condition: service_healthy

  # A bit of a hack: this service service serves no purpose other forcing
  # "docker compose up -d" to return only when the Postres is fully ready
  # as defined by its health check, since this container will only start
  # when the DB is healthy.
  alpine:
    profiles: ["inproc"]
    image: 'alpine:latest'
    depends_on:
      postgres:
        condition: service_healthy
      azurite:
        condition: service_started
    command: ["sleep", "infinity"]
