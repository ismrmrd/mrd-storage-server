// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ismrmrd/mrd-storage-server/core (interfaces: MetadataDatabase,BlobStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	io "io"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	core "github.com/ismrmrd/mrd-storage-server/core"
)

// MockMetadataDatabase is a mock of MetadataDatabase interface.
type MockMetadataDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataDatabaseMockRecorder
}

// MockMetadataDatabaseMockRecorder is the mock recorder for MockMetadataDatabase.
type MockMetadataDatabaseMockRecorder struct {
	mock *MockMetadataDatabase
}

// NewMockMetadataDatabase creates a new mock instance.
func NewMockMetadataDatabase(ctrl *gomock.Controller) *MockMetadataDatabase {
	mock := &MockMetadataDatabase{ctrl: ctrl}
	mock.recorder = &MockMetadataDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataDatabase) EXPECT() *MockMetadataDatabaseMockRecorder {
	return m.recorder
}

// CompleteStagedBlobMetadata mocks base method.
func (m *MockMetadataDatabase) CompleteStagedBlobMetadata(arg0 context.Context, arg1 core.BlobKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompleteStagedBlobMetadata", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CompleteStagedBlobMetadata indicates an expected call of CompleteStagedBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) CompleteStagedBlobMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteStagedBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).CompleteStagedBlobMetadata), arg0, arg1)
}

// DeleteBlobMetadata mocks base method.
func (m *MockMetadataDatabase) DeleteBlobMetadata(arg0 context.Context, arg1 core.BlobKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlobMetadata", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlobMetadata indicates an expected call of DeleteBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) DeleteBlobMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).DeleteBlobMetadata), arg0, arg1)
}

// GetBlobMetadata mocks base method.
func (m *MockMetadataDatabase) GetBlobMetadata(arg0 context.Context, arg1 core.BlobKey, arg2 time.Time) (*core.BlobInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlobMetadata", arg0, arg1, arg2)
	ret0, _ := ret[0].(*core.BlobInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlobMetadata indicates an expected call of GetBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) GetBlobMetadata(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).GetBlobMetadata), arg0, arg1, arg2)
}

// GetPageOfExpiredBlobMetadata mocks base method.
func (m *MockMetadataDatabase) GetPageOfExpiredBlobMetadata(arg0 context.Context, arg1 time.Time) ([]core.BlobKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPageOfExpiredBlobMetadata", arg0, arg1)
	ret0, _ := ret[0].([]core.BlobKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPageOfExpiredBlobMetadata indicates an expected call of GetPageOfExpiredBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) GetPageOfExpiredBlobMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPageOfExpiredBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).GetPageOfExpiredBlobMetadata), arg0, arg1)
}

// HealthCheck mocks base method.
func (m *MockMetadataDatabase) HealthCheck(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockMetadataDatabaseMockRecorder) HealthCheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockMetadataDatabase)(nil).HealthCheck), arg0)
}

// SearchBlobMetadata mocks base method.
func (m *MockMetadataDatabase) SearchBlobMetadata(arg0 context.Context, arg1 map[string][]string, arg2 *time.Time, arg3 *core.ContinutationToken, arg4 int, arg5 time.Time) ([]core.BlobInfo, *core.ContinutationToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchBlobMetadata", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].([]core.BlobInfo)
	ret1, _ := ret[1].(*core.ContinutationToken)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SearchBlobMetadata indicates an expected call of SearchBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) SearchBlobMetadata(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).SearchBlobMetadata), arg0, arg1, arg2, arg3, arg4, arg5)
}

// StageBlobMetadata mocks base method.
func (m *MockMetadataDatabase) StageBlobMetadata(arg0 context.Context, arg1 core.BlobKey, arg2 *core.BlobTags) (*core.BlobInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StageBlobMetadata", arg0, arg1, arg2)
	ret0, _ := ret[0].(*core.BlobInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StageBlobMetadata indicates an expected call of StageBlobMetadata.
func (mr *MockMetadataDatabaseMockRecorder) StageBlobMetadata(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StageBlobMetadata", reflect.TypeOf((*MockMetadataDatabase)(nil).StageBlobMetadata), arg0, arg1, arg2)
}

// MockBlobStore is a mock of BlobStore interface.
type MockBlobStore struct {
	ctrl     *gomock.Controller
	recorder *MockBlobStoreMockRecorder
}

// MockBlobStoreMockRecorder is the mock recorder for MockBlobStore.
type MockBlobStoreMockRecorder struct {
	mock *MockBlobStore
}

// NewMockBlobStore creates a new mock instance.
func NewMockBlobStore(ctrl *gomock.Controller) *MockBlobStore {
	mock := &MockBlobStore{ctrl: ctrl}
	mock.recorder = &MockBlobStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlobStore) EXPECT() *MockBlobStoreMockRecorder {
	return m.recorder
}

// DeleteBlob mocks base method.
func (m *MockBlobStore) DeleteBlob(arg0 context.Context, arg1 core.BlobKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlob", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlob indicates an expected call of DeleteBlob.
func (mr *MockBlobStoreMockRecorder) DeleteBlob(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlob", reflect.TypeOf((*MockBlobStore)(nil).DeleteBlob), arg0, arg1)
}

// HealthCheck mocks base method.
func (m *MockBlobStore) HealthCheck(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockBlobStoreMockRecorder) HealthCheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockBlobStore)(nil).HealthCheck), arg0)
}

// ReadBlob mocks base method.
func (m *MockBlobStore) ReadBlob(arg0 context.Context, arg1 io.Writer, arg2 core.BlobKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadBlob", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadBlob indicates an expected call of ReadBlob.
func (mr *MockBlobStoreMockRecorder) ReadBlob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadBlob", reflect.TypeOf((*MockBlobStore)(nil).ReadBlob), arg0, arg1, arg2)
}

// SaveBlob mocks base method.
func (m *MockBlobStore) SaveBlob(arg0 context.Context, arg1 io.Reader, arg2 core.BlobKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveBlob", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveBlob indicates an expected call of SaveBlob.
func (mr *MockBlobStoreMockRecorder) SaveBlob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBlob", reflect.TypeOf((*MockBlobStore)(nil).SaveBlob), arg0, arg1, arg2)
}
